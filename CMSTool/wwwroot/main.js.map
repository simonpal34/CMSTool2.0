{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/Metric.ts","webpack:///./src/app/Models/Mission.ts","webpack:///./src/app/Models/ReportingUnit.ts","webpack:///./src/app/Models/Topic.ts","webpack:///./src/app/Modules/material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/Login/Login.component.html","webpack:///./src/app/components/Login/login.component.ts","webpack:///./src/app/components/MetricTable/metricTable.component.html","webpack:///./src/app/components/MetricTable/metricTable.component.ts","webpack:///./src/app/components/MissionTable/missionTable.component.html","webpack:///./src/app/components/MissionTable/missionTable.component.ts","webpack:///./src/app/components/Profile/profile.component.html","webpack:///./src/app/components/Profile/profile.component.ts","webpack:///./src/app/components/ReportingUnitTable/reportingUnitTable.component.html","webpack:///./src/app/components/ReportingUnitTable/reportingUnitTable.component.ts","webpack:///./src/app/components/Staging/staging.component.html","webpack:///./src/app/components/Staging/staging.component.ts","webpack:///./src/app/components/TopicTable/topicTable.component.html","webpack:///./src/app/components/TopicTable/topicTable.component.ts","webpack:///./src/app/components/app.component.html","webpack:///./src/app/components/app.component.ts","webpack:///./src/app/services/LoginService.ts","webpack:///./src/app/services/login-guard.service.ts","webpack:///./src/app/services/missionService.ts","webpack:///./src/app/services/serviceMaster.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nexport class Metric {\n  public id: number;\n  public name: string;\n  public lexicon_name: string;\n  public is_featured: boolean;\n  public is_displayed: boolean;\n  public rounding_units: number;\n  public sig_figs: number;\n  public x: number[];\n  public x_type: string;\n  public y: number[];\n  public y_type: string;\n  public y_label: string;\n  public slideID: number;\n  public slideTitle: string;\n  public children: number[];\n  public hasChildren: boolean;\n  public meta: Meta[];\n  public sources: string[];\n  public checked: boolean;\n  public sequence: number;\n  public ancestry: Ancestry;\n  public data: Data[];\n  public available_adjustments: Adjustment[];\n  public modified_by: string;\n  public modified_on: Date;\n  public LastUpdatedFromScraper: Date;\n  public LastPushedIntoProduction: Date;\n  public application_type: number;\n}\nexport class Adjustment {\n  public id: string;\n  public name: string\n}\n\nexport class Meta {\n  public type: string;\n  public data: string;\n\n  public constructor(\n    fields?: {\n      type?: string,\n      data?: string\r\n    }) {\n    if (fields) Object.assign(this, fields);\n  }\n}\nexport class Data\n{\n    public x: string;\n    public y: number;\n}\n\nexport class chartData\n{\n    data: number[];\n    label: string;\n}\nexport class Ancestry {\n  ancestor_metrics: number[];\n  mission: number;\n  reporting_unit: number;\n  topic: number;\n}\n","import { ReportingUnit } from './ReportingUnit';\n\nexport class Mission {\n    public id: number;\n    public name: string;\n    public metrics: number[];\n    public applicationType: number;\n    public reporting_units: ReportingUnit[];\n}\n","import { Topic } from './Topic';\n\nexport class ReportingUnit {\n  public id: number;\n  public name: string;\n  public topics: Topic[];\n}\n","import { Metric } from './Metric';\nexport class Topic {\n  name: string;\n  id: number;\n  metrics: Metric[];\n}\n","import { NgModule } from \"@angular/core\";\r\nimport {\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatStepperModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatStepperModule\r\n    ],\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatStepperModule\r\n    ],\r\n})\r\nexport class MaterialModule { }\r\n","import { NgModule, ErrorHandler } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule, FormBuilder } from \"@angular/forms\";\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\nimport { LoginComponent } from './components/Login/login.component';\r\nimport { AppComponent } from './components/app.component';\r\nimport { MaterialModule } from './Modules/material.module';\r\nimport { ServiceMaster } from './services/serviceMaster';\r\nimport { LoginGuard } from './services/login-guard.service';\r\nimport { StagingComponent } from './components/Staging/staging.component';\r\nimport { ProfileComponent } from './components/Profile/profile.component'\r\nimport { MissionTableComponent } from './components/MissionTable/missionTable.component'\r\nimport { ReportingUnitTableComponent } from './components/ReportingUnitTable/reportingUnitTable.component'\r\nimport { TopicTableComponent } from './components/TopicTable/topicTable.component'\r\nimport { MetricTableComponent } from './components/MetricTable/metricTable.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    StagingComponent,\r\n    ProfileComponent,\r\n    MissionTableComponent,\r\n    ReportingUnitTableComponent,\r\n    TopicTableComponent,\r\n    MetricTableComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MaterialModule,\r\n    RouterModule.forRoot([\r\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: \"staging\", component: StagingComponent, canActivate: [LoginGuard], data: { title: \"Staging\" } },\r\n      { path: \"profile\", component: ProfileComponent, canActivate: [LoginGuard], data: { title: \"Profile\" } }\r\n\r\n    ])\r\n    \r\n  ],\r\n  providers: [\r\n    FormBuilder,\r\n    ServiceMaster,\r\n    LoginGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div style=\\\"position:center\\\" class=\\\"modal-dialog modal-lg\\\">\\r\\n  <mat-card style=\\\"max-width: 700px;\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n      <mat-card-title><h2>Login</h2></mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content style=\\\"display: flex; flex-direction: column; width:100%\\\">\\r\\n      <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n        <mat-label>Username</mat-label>\\r\\n        <input matInput name=\\\"user\\\" [(ngModel)]=\\\"user\\\">\\r\\n        <span matPrefix><mat-icon>person</mat-icon></span>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n        <mat-label>Password</mat-label>\\r\\n        <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"pass\\\" [(ngModel)]=\\\"pass\\\">\\r\\n        <span matPrefix><mat-icon>lock</mat-icon></span>\\r\\n        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n  </div>\\r\\n\"","import { Component} from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ServiceMaster } from '../../services/serviceMaster';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './Login.component.html',\r\n})\r\nexport class LoginComponent {\r\n    user: string;\r\n    pass: string;\r\n    wrongLogin: boolean;\r\n  options: FormGroup;\r\n  hide: boolean\r\n \r\n\r\n\r\n  constructor(fb: FormBuilder , public svc: ServiceMaster, public router : Router)\r\n    {\r\n      this.options = fb.group({\r\n        hideRequired: false,\r\n        floatLabel: 'auto',\r\n      });\r\n        this.wrongLogin = false; \r\n        this.user = \"\";\r\n        this.pass = \"\";\r\n        this.hide = true;\r\n    }\r\n\r\n    async login()\r\n    {\r\n      var log: boolean;\r\n      this.svc.loginService.login(this.user, this.pass).then(loggedIn => {\r\n        log = loggedIn\r\n        this.wrongLogin = !log\r\n        if (log) {\r\n          this.svc.getAuthCode();\r\n          this.router.navigate(['/staging'])\r\n        } else {\r\n          console.log(\"it did not worked\");\r\n        }\r\n\r\n\r\n      });\r\n        \r\n        \r\n        \r\n    }\r\n\r\n}\r\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\r\\n  <caption style=\\\"padding-left:35px\\\"><b>Metrics</b></caption>\\r\\n  <table mat-table [dataSource]=\\\"svc.stagingMetrics\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let metric\\\"> {{metric.name}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef></th>\\r\\n      <td mat-cell *matCellDef=\\\"let metric\\\">\\r\\n        <button  matTooltip=\\\"{{metric.id}}\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>people</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ServiceMaster } from '../../services/serviceMaster';\r\n\r\n\r\n@Component({\r\n  selector: 'metric-table',\r\n  templateUrl: './metricTable.component.html',\r\n})\r\nexport class MetricTableComponent {\r\n  displayedColumns: string[] = ['child', 'name'];\r\n  constructor(private svc: ServiceMaster) {\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\r\\n  <caption  style=\\\"padding-left:35px\\\"><b>Missions</b></caption>\\r\\n  <table mat-table [dataSource]=\\\"svc.stagingMissions\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let misison\\\"> {{misison.name}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef></th>\\r\\n      <td mat-cell *matCellDef=\\\"let mission\\\">\\r\\n        <button *ngIf=\\\"svc.stagingMissions.length > 1\\\" matTooltip=\\\"{{mission.id}}\\\" type=\\\"button\\\" (click)=\\\"selectMission(mission)\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>people</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ServiceMaster } from '../../services/serviceMaster';\r\nimport { Mission } from '../../Models/Mission';\r\n\r\n\r\n@Component({\r\n  selector: 'mission-table',\r\n  templateUrl: './missionTable.component.html',\r\n})\r\nexport class MissionTableComponent {\r\n  displayedColumns: string[] = ['child','name'];\r\n  constructor(private svc: ServiceMaster) {\r\n    \r\n  }\r\n\r\n  selectMission(mission: Mission) {\r\n    this.svc.stagingMissions = [mission];\r\n    this.svc.getReportingUnits()\r\n\r\n  }\r\n}\r\n","module.exports = \"<h2>Hi, {{svc.loginService.profile.FirstName}}</h2>\\r\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n  <mat-label>First Name</mat-label>\\r\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.FirstName\\\"  value=\\\"{{svc.loginService.profile.FirstName}}\\\">\\r\\n</mat-form-field>\\r\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\r\\n  <mat-label>Last Name</mat-label>\\r\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.LastName\\\" value=\\\"{{svc.loginService.profile.LastName}}\\\">\\r\\n</mat-form-field>\\r\\n<br />\\r\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\" style=\\\"width:20%\\\">\\r\\n  <mat-label>Email</mat-label>\\r\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.Email\\\" value=\\\"{{svc.loginService.profile.Email}}\\\">\\r\\n</mat-form-field>\\r\\n<br />\\r\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\" >\\r\\n  <mat-label>Password</mat-label>\\r\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.Password\\\" value=\\\"{{svc.loginService.profile.Password}}\\\">\\r\\n</mat-form-field>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ServiceMaster } from '../../services/serviceMaster';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'profile',\r\n  templateUrl: './profile.component.html'\r\n})\r\nexport class ProfileComponent {\r\n  options: FormGroup;\r\n\r\n\r\n  constructor(protected svc: ServiceMaster, fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      floatLabel: 'auto',\r\n    });\r\n\r\n  }\r\n}\r\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\r\\n  <caption style=\\\"padding-left:35px\\\"><b>Reporting Units</b></caption>\\r\\n  <table mat-table [dataSource]=\\\"svc.stagingReportingUnits\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let reportingUnit\\\"> {{reportingUnit.name}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef></th>\\r\\n      <td mat-cell *matCellDef=\\\"let reportingUnit\\\">\\r\\n        <button matTooltip=\\\"{{reportingUnit.id}}\\\" type=\\\"button\\\" (click)=\\\"selectReportingUnit(reportingUnit)\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>people</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ServiceMaster } from '../../services/serviceMaster';\r\nimport { ReportingUnit } from '../../Models/ReportingUnit';\r\n\r\n\r\n@Component({\r\n  selector: 'reporting-unit-table',\r\n  templateUrl: './reportingUnitTable.component.html',\r\n})\r\nexport class ReportingUnitTableComponent {\r\n  displayedColumns: string[] = ['child', 'name'];\r\n  constructor(private svc: ServiceMaster) {\r\n\r\n  }\r\n\r\n  selectReportingUnit(reportingUnit: ReportingUnit) {\r\n    this.svc.stagingReportingUnits = [reportingUnit];\r\n    this.svc.getTopics();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"header-row\\\" style=\\\"padding-left:20px\\\">\\r\\n  <h2>Staging</h2>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <mat-form-field [floatLabel]=\\\"search.value.floatLabel\\\" style=\\\"padding-left:35px\\\">\\r\\n    <mat-label>Search Metric</mat-label>\\r\\n    <input matInput name=\\\"search\\\" [(ngModel)]=\\\"SearchID\\\">\\r\\n  </mat-form-field>\\r\\n  <button mat-raised-button color=\\\"warn\\\" style=\\\" font-size:10pt; height:35px; width:25px; margin-left:15px;\\\" (click)=\\\"clear()\\\"><mat-icon style=\\\" font-size:10pt; margin-top:10px\\\">backspace</mat-icon> clear</button>\\r\\n</div>\\r\\n<ul >\\r\\n  <li *ngIf=\\\"svc.missionBreadCrumb.id != -1\\\" style=\\\"display:inline\\\">\\r\\n    /<a (click)=\\\"goToMission()\\\" style=\\\"cursor:pointer\\\" >{{svc.missionBreadCrumb.name}}</a></li>\\r\\n</ul>\\r\\n<mission-table *ngIf=\\\"svc.stagingMissions[0].id != -1\\\"></mission-table>\\r\\n<reporting-unit-table *ngIf=\\\"svc.stagingReportingUnits[0].id != -1\\\"></reporting-unit-table>\\r\\n<topic-table *ngIf=\\\"svc.stagingTopics[0].id != -1\\\"></topic-table>\\r\\n<metric-table *ngIf=\\\"svc.stagingMetrics[0].id != -1\\\"></metric-table>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ServiceMaster } from '../../services/serviceMaster'\r\n\r\n\r\n@Component({\r\n  selector: 'staging',\r\n  templateUrl: './staging.component.html'\r\n})\r\nexport class StagingComponent {\r\n  search: FormGroup;\r\n  SearchID: String\r\n  constructor(fb: FormBuilder, private svc: ServiceMaster ) {\r\n    this.search = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto',\r\n    });\r\n    this.SearchID = \"\";\r\n  }\r\n\r\n  clear() {\r\n    this.svc.getMissions();\r\n  }\r\ngoToMission()\r\n{\r\n  this.svc.stagingMissions = [this.svc.missionBreadCrumb];\r\n  this.svc.getReportingUnits();\r\n}\r\n}\r\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\r\\n  <caption style=\\\"padding-left:35px\\\"><b>Topics</b></caption>\\r\\n  <table mat-table [dataSource]=\\\"svc.stagingTopics\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let topic\\\"> {{topic.name}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef></th>\\r\\n      <td mat-cell *matCellDef=\\\"let topic\\\">\\r\\n        <button  matTooltip=\\\"{{topic.id}}\\\" (click)=\\\"selectTopic(topic)\\\" type=\\\"button\\\"  mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>people</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { ServiceMaster } from '../../services/serviceMaster';\r\nimport { Topic } from '../../Models/Topic';\r\n\r\n\r\n@Component({\r\n  selector: 'topic-table',\r\n  templateUrl: './topicTable.component.html',\r\n})\r\nexport class TopicTableComponent {\r\n  displayedColumns: string[] = ['child', 'name'];\r\n  constructor(private svc: ServiceMaster) {\r\n\r\n  }\r\n  selectTopic(topic: Topic) {\r\n    this.svc.stagingTopics = [topic];\r\n    this.svc.trendToMetrics();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"container-fluid\\\" style=\\\"height:100%\\\">\\r\\n  <mat-toolbar style=\\\"width:100%\\\" color=\\\"warn\\\">\\r\\n    <mat-toolbar-row>\\r\\n      <h1 class=\\\"app-name\\\">{{title}}</h1>\\r\\n      <span style=\\\"flex: 1 1 auto;\\\"></span>\\r\\n      <button type=\\\"button\\\" *ngIf=\\\"svc.loginService.isLoggedIn\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" color=\\\"primary\\\">\\r\\n        <mat-icon>person</mat-icon>\\r\\n      </button>\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item>\\r\\n            Log Out\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"profile()\\\">\\r\\n          Your Profile\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </mat-toolbar-row>\\r\\n  </mat-toolbar>\\r\\n  <mat-sidenav-container class=\\\"example-container\\\" >\\r\\n    <mat-sidenav *ngIf=\\\"svc.loginService.isLoggedIn\\\" mode=\\\"side\\\" opened role=\\\"navigation\\\" color=\\\"primary\\\" style=\\\"height:100%\\\">\\r\\n      <mat-nav-list >\\r\\n        <a mat-list-item routerLink='/staging'>Staging</a>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content >\\r\\n      <router-outlet></router-outlet>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../services/serviceMaster';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title: string\n  isUserLoggedIn: boolean;\n  constructor(private svc: ServiceMaster, private router: Router) {\r\n    this.title = 'USA Facts Data Tool';\r\n    \r\n  }\n\n  profile() {\n    this.router.navigate(['/profile']);\r\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport { ActivatedRoute, Router, NavigationExtras  } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Profile } from '../Models/Profile';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  isLoggedIn: boolean;\r\n  public profile: Profile;\r\n\r\n  constructor(protected http: HttpClient) {\r\n    this.isLoggedIn = false;\r\n  }\r\n  login(Username: string, Password: string): Promise<boolean>{\r\n    let header = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n    return this.http.post<Profile>('http://usafacts-api-staging.azurewebsites.net/api/v2/authentication', JSON.stringify({ Username, Password }), { headers: header }).toPromise()\r\n      .then(response => {\r\n        this.isLoggedIn = true;\r\n        this.profile = response;\r\n        return Promise.resolve(this.isLoggedIn);\r\n\r\n\r\n      })\r\n      .catch(error => {\r\n        this.isLoggedIn = false;\r\n        return Promise.resolve(this.isLoggedIn);\r\n      });\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, NavigationExtras, CanLoad, Route } from '@angular/router';\r\nimport { ServiceMaster } from './serviceMaster';\r\n\r\n\r\n@Injectable()\r\nexport class LoginGuard implements CanActivate, CanActivateChild, CanLoad {\r\n    constructor(private svc: ServiceMaster, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n      if (this.svc.loginService.isLoggedIn) {\r\n        return true;\r\n      }\r\n      else {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        return this.canActivate(route, state);\r\n    }\r\n\r\n    canLoad(route: Route): boolean {\r\n\r\n        let url = `/${route.path}`;\r\n        return this.checkLogin(url);\r\n    }\r\n\r\n    checkLogin(url: string): boolean {\r\n\r\n        if (this.svc.loginService.isLoggedIn) {\r\n            return true;\r\n        }\r\n\r\n        //this.loginService.loginRedirectUrl = url;\r\n        this.router.navigate(['/login']);\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Mission } from '../Models/Mission';\r\n\r\n@Injectable()\r\nexport class MissionService {\r\n\r\n\r\n  constructor(protected http: HttpClient, private key: string, private url : string) {\r\n  }\r\n  getStagingMissions(): Promise<Mission[]> {\r\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\r\n\r\n    return this.http.get<Mission[]>(this.url + '/missions', { headers: header }).toPromise();\r\n  }\r\n  public getStagingPopulationMissions(): Promise<Mission[]> {\r\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\r\n    return this.http.get<Mission[]>(this.url + '/population', { headers: header }).toPromise();\r\n  }\r\n\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Profile } from '../Models/Profile';\r\nimport { LoginService } from './LoginService';\r\nimport { MissionService } from './missionService';\r\nimport { Mission } from '../Models/Mission';\r\nimport { ReportingUnit } from '../Models/ReportingUnit';\r\nimport { Topic } from '../Models/Topic';\r\nimport { Metric } from '../Models/Metric';\r\n\r\n@Injectable()\r\nexport class ServiceMaster {\r\n  loginService: LoginService;\r\n  missionService: MissionService;\r\n  authCode: string;\r\n  stagingUrl = 'http://usafacts-api-staging.azurewebsites.net/api/v2';\r\n  stagingMissions: Mission[];\r\n  stagingReportingUnits: ReportingUnit[];\r\n  stagingTopics: Topic[];\r\n  missionBreadCrumb: Mission;\r\n  reportingUnitBreadCrumb: ReportingUnit;\r\n  stagingMetrics: Metric[];\r\n  constructor(protected http: HttpClient) {\r\n    this.loginService = new LoginService(http);\r\n    var r = new ReportingUnit();\r\n    r.id = -1;\r\n    this.stagingReportingUnits = [r];\r\n    this.reportingUnitBreadCrumb = r;\r\n    var t = new Topic();\r\n    t.id = -1;\r\n    this.stagingTopics = [t];\r\n    var miss = new Mission();\r\n    miss.id = -1;\r\n    this.stagingMissions = [miss];\r\n    this.missionBreadCrumb = miss;\r\n    var met = new Metric;\r\n    met.id = -1;\r\n    this.stagingMetrics = [met];\r\n  }\r\n\r\n  getAuthCode() {\r\n    this.authCode = 'Basic ' + this.loginService.profile.SessionId;\r\n    this.missionService = new MissionService(this.http, this.authCode, this.stagingUrl);\r\n    this.getMissions();\r\n    \r\n\r\n  }\r\n\r\n  getMissions() {\r\n    var r = new ReportingUnit();\r\n    r.id = -1;\r\n    this.stagingReportingUnits = [r];\r\n    var t = new Topic();\r\n    t.id = -1;\r\n    this.stagingTopics = [t];\r\n    var met = new Metric;\r\n    met.id = -1;\r\n    this.stagingMetrics = [met];\r\n    this.missionBreadCrumb.id = -1\r\n    this.reportingUnitBreadCrumb.id = -1;\r\n    this.missionService.getStagingMissions().then(response => {\r\n      response.forEach(r => {\r\n        r.applicationType = 1;\r\n      });\r\n      this.stagingMissions = response;\r\n      this.missionService.getStagingPopulationMissions().then(response => {\r\n        response.forEach(r => {\r\n          r.applicationType = 4;\r\n        });\r\n        this.stagingMissions = this.stagingMissions.concat(response);\r\n      });\r\n    });\r\n  }\r\n\r\n  getReportingUnits() {\r\n    var t = new Topic();\r\n    t.id = -1;\r\n    this.stagingTopics = [t];\r\n    var m = new Mission()\r\n    m.id = -1;\r\n    var met = new Metric;\r\n    met.id = -1;\r\n    this.stagingMetrics = [met];\r\n    this.missionBreadCrumb = m;\r\n    if (this.stagingMissions.length == 1) {\r\n      if (this.stagingMissions[0].applicationType == 1) {\r\n        \r\n        this.stagingReportingUnits = this.stagingMissions[0].reporting_units;\r\n      }\r\n    }\r\n    else {\r\n      console.log(\"Error getting reporting units\");\r\n    }\r\n    \r\n  }\r\n\r\n  getTopics() {\r\n    var miss = new Mission();\r\n    miss.id = -1;\r\n    var met = new Metric;\r\n    met.id = -1;\r\n    this.stagingMetrics = [met];\r\n    this.missionBreadCrumb = this.stagingMissions[0];\r\n    this.stagingMissions = [miss];\r\n    this.stagingTopics = this.stagingReportingUnits[0].topics;\r\n  }\r\n\r\n  trendToMetrics() {\r\n    var r = new ReportingUnit();\r\n    r.id = -1;\r\n    this.reportingUnitBreadCrumb = this.stagingReportingUnits[0];\r\n    this.stagingReportingUnits = [r];\r\n    this.stagingMetrics = this.stagingTopics[0].metrics;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}