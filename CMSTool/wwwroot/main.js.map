{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Models/Metric.ts","webpack:///./src/app/Models/Mission.ts","webpack:///./src/app/Models/ReportingUnit.ts","webpack:///./src/app/Models/Topic.ts","webpack:///./src/app/Modules/material.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/Login/Login.component.html","webpack:///./src/app/components/Login/login.component.ts","webpack:///./src/app/components/MetricTable/edit-metric-dialog.component.html","webpack:///./src/app/components/MetricTable/edit-metric-dialog.component.ts","webpack:///./src/app/components/MetricTable/metricTable.component.html","webpack:///./src/app/components/MetricTable/metricTable.component.ts","webpack:///./src/app/components/MissionTable/missionTable.component.html","webpack:///./src/app/components/MissionTable/missionTable.component.ts","webpack:///./src/app/components/Profile/profile.component.html","webpack:///./src/app/components/Profile/profile.component.ts","webpack:///./src/app/components/ReportingUnitTable/reportingUnitTable.component.html","webpack:///./src/app/components/ReportingUnitTable/reportingUnitTable.component.ts","webpack:///./src/app/components/Staging/staging.component.html","webpack:///./src/app/components/Staging/staging.component.ts","webpack:///./src/app/components/TopicTable/topicTable.component.html","webpack:///./src/app/components/TopicTable/topicTable.component.ts","webpack:///./src/app/components/app.component.html","webpack:///./src/app/components/app.component.ts","webpack:///./src/app/services/LoginService.ts","webpack:///./src/app/services/login-guard.service.ts","webpack:///./src/app/services/metricService.ts","webpack:///./src/app/services/missionService.ts","webpack:///./src/app/services/reportingUnitService.ts","webpack:///./src/app/services/serviceMaster.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\nexport class Metric {\n  public id: number;\n  public name: string;\n  public lexicon_name: string;\n  public is_featured: boolean;\n  public is_displayed: boolean;\n  public rounding_units: number;\n  public sig_figs: number;\n  public x: number[];\n  public x_type: string;\n  public y: number[];\n  public y_type: string;\n  public y_label: string;\n  public slideID: number;\n  public slideTitle: string;\n  public children: number[];\n  public hasChildren: boolean;\n  public meta: Meta[];\n  public sources: string[];\n  public checked: boolean;\n  public sequence: number;\n  public ancestry: Ancestry;\n  public data: Data[];\n  public available_adjustments: Adjustment[];\n  public modified_by: string;\n  public modified_on: Date;\n  public LastUpdatedFromScraper: Date;\n  public LastPushedIntoProduction: Date;\n  public application_type: number;\n}\nexport class Adjustment {\n  public id: string;\n  public name: string\n}\n\nexport class Meta {\n  public type: string;\n  public data: string;\n\n  public constructor(\n    fields?: {\n      type?: string,\n      data?: string\n    }) {\n    if (fields) Object.assign(this, fields);\n  }\n}\nexport class Data\n{\n    public x: string;\n    public y: number;\n}\n\nexport class Ancestry {\n  ancestor_metrics: number[];\n  mission: number;\n  reporting_unit: number;\n  topic: number;\n}\n\nexport class ScrapedMetric {\n  public Data: ScrapedData[];\n  public UnitPower: number;\n  public Name: string;\n\n}\nexport class ScrapedData {\n  public Key: string;\n  public Value: number;\n}\n\nexport class ChartData {\n  public metric: Metric;\n  public scraped: ScrapedMetric;\n}\n","import { ReportingUnit } from './ReportingUnit';\n\nexport class Mission {\n    public id: number;\n    public name: string;\n    public metrics: number[];\n    public applicationType: number;\n  public reporting_units: ReportingUnit[];\n}\n","import { Topic } from './Topic';\n\nexport class ReportingUnit {\n  public id: number;\n  public name: string;\n  public topics: Topic[];\n}\n","import { Metric } from './Metric';\nexport class Topic {\n  name: string;\n  id: number;\n  metrics: Metric[];\n}\n","import { NgModule } from \"@angular/core\";\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule\n} from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatStepperModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatStepperModule\n    ],\n})\nexport class MaterialModule { }\n","import { NgModule, ErrorHandler } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { FormsModule, FormBuilder } from \"@angular/forms\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IgxCategoryChartModule } from \"igniteui-angular-charts/ES5/igx-category-chart-module\";\n\n\n\nimport { LoginComponent } from './components/Login/login.component';\nimport { AppComponent } from './components/app.component';\nimport { MaterialModule } from './Modules/material.module';\nimport { ServiceMaster } from './services/serviceMaster';\nimport { LoginGuard } from './services/login-guard.service';\nimport { StagingComponent } from './components/Staging/staging.component';\nimport { ProfileComponent } from './components/Profile/profile.component'\nimport { MissionTableComponent } from './components/MissionTable/missionTable.component'\nimport { ReportingUnitTableComponent } from './components/ReportingUnitTable/reportingUnitTable.component'\nimport { TopicTableComponent } from './components/TopicTable/topicTable.component'\nimport { MetricTableComponent } from './components/MetricTable/metricTable.component';\nimport { EditMetricDialogComponent } from './components/MetricTable/edit-metric-dialog.component';\nimport { MAT_DIALOG_DATA } from \"@angular/material\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    StagingComponent,\n    ProfileComponent,\n    MissionTableComponent,\n    ReportingUnitTableComponent,\n    TopicTableComponent,\n    MetricTableComponent,\n    EditMetricDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    MaterialModule,\n    IgxCategoryChartModule,\n    RouterModule.forRoot([\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: 'login', component: LoginComponent },\n      { path: \"staging\", component: StagingComponent, canActivate: [LoginGuard], data: { title: \"Staging\" } },\n      { path: \"profile\", component: ProfileComponent, canActivate: [LoginGuard], data: { title: \"Profile\" } }\n\n    ])\n    \n  ],\n  providers: [\n    FormBuilder,\n    ServiceMaster,\n    LoginGuard,\n    {\n      provide: MAT_DIALOG_DATA,\n      useValue: {} // Add any data you wish to test if it is passed/used correctly\n    }\n  ],\n  entryComponents: [\n    EditMetricDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div style=\\\"position:center\\\" class=\\\"modal-dialog modal-lg\\\">\\n  <mat-card style=\\\"max-width: 700px;\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title><h2>Login</h2></mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content style=\\\"display: flex; flex-direction: column; width:100%\\\">\\n      <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n        <mat-label>Username</mat-label>\\n        <input matInput name=\\\"user\\\" [(ngModel)]=\\\"user\\\">\\n        <span matPrefix><mat-icon>person</mat-icon></span>\\n      </mat-form-field>\\n      <mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n        <mat-label>Password</mat-label>\\n        <input matInput [type]=\\\"hide ? 'password' : 'text'\\\" name=\\\"pass\\\" [(ngModel)]=\\\"pass\\\">\\n        <span matPrefix><mat-icon>lock</mat-icon></span>\\n        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n      </mat-form-field>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\n    </mat-card-actions>\\n  </mat-card>\\n  </div>\\n\"","import { Component} from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './Login.component.html',\n})\nexport class LoginComponent {\n    user: string;\n    pass: string;\n    wrongLogin: boolean;\n  options: FormGroup;\n  hide: boolean\n \n\n\n  constructor(fb: FormBuilder , public svc: ServiceMaster, public router : Router)\n    {\n      this.options = fb.group({\n        hideRequired: false,\n        floatLabel: 'auto',\n      });\n        this.wrongLogin = false; \n        this.user = \"\";\n        this.pass = \"\";\n        this.hide = true;\n    }\n\n    async login()\n    {\n      var log: boolean;\n      this.svc.loginService.login(this.user, this.pass).then(loggedIn => {\n        log = loggedIn\n        this.wrongLogin = !log\n        if (log) {\n          this.svc.getAuthCode();\n          this.router.navigate(['/staging'])\n        } else {\n          console.log(\"it did not worked\");\n        }\n\n\n      });\n        \n        \n        \n    }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Edit {{metric.name}}</h1>\\n<div mat-dialog-content style=\\\"width:100%; height:90%; overflow:visible \\\">\\n  <mat-tab-group style=\\\"width:100%; height:87%; overflow:visible  \\\">\\n    <mat-tab label=\\\"Main\\\" style=\\\"width:100%; height:100%;overflow:visible \\\">\\n      <br />\\n      <form style=\\\"width:100%; height:100%;overflow:visible \\\">\\n        <div style=\\\"width:100%\\\">\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"width:65%\\\">\\n            <mat-label>Name</mat-label>\\n            <input matInput name=\\\"name\\\" [(ngModel)]=\\\"metric.name\\\" value=\\\"{{metric.name}}\\\">\\n          </mat-form-field>\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"padding-left:15px;width:30%\\\">\\n            <mat-label>ID</mat-label>\\n            <input matInput name=\\\"id\\\" [(ngModel)]=\\\"metric.id\\\" value=\\\"{{metric.id}}\\\" readonly>\\n          </mat-form-field>\\n        </div>\\n\\n        <div style=\\\"width:100%\\\">\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"width:50%\\\">\\n            <mat-label>X Axis</mat-label>\\n            <mat-select matInput name=\\\"x-type\\\" [(ngModel)]=\\\"metric.x_type\\\" value=\\\"{{metric.x_type}}\\\">\\n              <mat-option *ngFor=\\\"let s of axisLabels\\\" [value]=\\\"s\\\">\\n                {{s}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"padding-left:15px; width:50%\\\">\\n            <mat-label>Y Axis</mat-label>\\n            <mat-select matInput name=\\\"y_type\\\" [(ngModel)]=\\\"metric.y_type\\\" value=\\\"{{metric.y_type}}\\\">\\n              <mat-option *ngFor=\\\"let s of axisLabels\\\" [value]=\\\"s\\\">\\n                {{s}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div style=\\\"width:100%\\\">\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"width:50%\\\">\\n            <mat-label>Units</mat-label>\\n            <input matInput name=\\\"units\\\" [(ngModel)]=\\\"metric.rounding_unit\\\" value=\\\"{{metric.rounding_unit}}\\\">\\n          </mat-form-field>\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"padding-left:15px; width:50%\\\">\\n            <mat-label>Sig Figs</mat-label>\\n            <input matInput name=\\\"sig_figs\\\" [(ngModel)]=\\\"metric.sig_figs\\\" value=\\\"{{metric.sig_figs}}\\\">\\n          </mat-form-field>\\n        </div>\\n        <div style=\\\"width:100%\\\">\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"width:50%\\\">\\n            <mat-label>Edited By</mat-label>\\n            <input matInput name=\\\"edited_by\\\" [(ngModel)]=\\\"metric.modified_by\\\" value=\\\"{{metric.modified_by}}\\\" readonly>\\n          </mat-form-field>\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"padding-left:15px; width:50%\\\">\\n            <mat-label>Sequence</mat-label>\\n            <input matInput name=\\\"sequence\\\" [(ngModel)]=\\\"metric.sequence\\\" value=\\\"{{metric.sequence}}\\\">\\n          </mat-form-field>\\n        </div>\\n        <div style=\\\"width:100%\\\" *ngIf=\\\"metric.LastUpdatedFromScraper\\\">\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"width:50%\\\">\\n            <mat-label>Database Source</mat-label>\\n            <input matInput name=\\\"database_scraped\\\" value=\\\"Scraped\\\" readonly>\\n          </mat-form-field>\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"padding-left:15px; width:50%\\\">\\n            <mat-label>Last Scraped</mat-label>\\n            <input matInput name=\\\"lastUpdatedFromScraper\\\" [(ngModel)]=\\\"metric.LastUpdatedFromScraper\\\" value=\\\"{{metric.LastUpdatedFromScraper | date: 'fullDate'}}\\\">\\n          </mat-form-field>\\n        </div>\\n        <div style=\\\"width:100%\\\" *ngIf=\\\"!metric.LastUpdatedFromScraper\\\">\\n          <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\" width:50%\\\">\\n            <mat-label>Databse Dource:</mat-label>\\n            <input matInput name=\\\"database_sheet\\\" value=\\\"Spreadsheet\\\">\\n          </mat-form-field>\\n        </div>\\n        <div style=\\\"width:100%\\\">\\n          <mat-checkbox name=\\\"is_featured\\\" [(ngModel)]=\\\"metric.is_featured\\\" value=\\\"{{metric.is_featured}}\\\" style=\\\"width:50%; padding-left:15px\\\" color=\\\"primary\\\">Is Featured</mat-checkbox>\\n          <mat-checkbox name=\\\"is_visible\\\" [(ngModel)]=\\\"metric.is_displayed\\\" value=\\\"{{metric.is_displayed}}\\\" style=\\\"width:50%; padding-left:15px\\\" color=\\\"primary\\\">Is Displayed</mat-checkbox>\\n        </div>\\n      </form>\\n    </mat-tab>\\n    <mat-tab label=\\\"Meta Data\\\">\\n      <br />\\n      <div *ngFor=\\\"let m of metric.meta\\\">\\n        <mat-form-field [floatLabel]=\\\"metricForm.value.floatLabel\\\" style=\\\"width:100%; height:40%\\\">\\n          <mat-label>{{m.type}}</mat-label>\\n          <textarea matInput name=\\\"{{m.type}}\\\" rows=\\\"3\\\" [(ngModel)]=\\\"m.data\\\" value=\\\"{{m.data}}\\\"></textarea>\\n        </mat-form-field>\\n        <div>\\n          <button mat-flat-button color=\\\"warn\\\" (click)=\\\"removeMeta(m)\\\">Remove {{m.type}}</button>\\n        </div>\\n      </div>\\n      <div class=\\\"pull-left\\\" style=\\\"margin-top: 10px\\\">\\n        <button mat-flat-button *ngIf=\\\"!hasDef\\\" color=\\\"primary\\\" (click)=\\\"addDef()\\\">Add Definition</button>\\n        <button mat-flat-button *ngIf=\\\"!hasFootnotes\\\" color=\\\"primary\\\" (click)=\\\"addFoot()\\\" style=\\\"margin-left:15px\\\">Add Footnote</button>\\n      </div>\\n\\n    </mat-tab>\\n    <mat-tab label=\\\"Sources\\\"> Sources </mat-tab>\\n    <mat-tab label=\\\"Adjustments\\\"> Adjustments </mat-tab>\\n    <mat-tab label=\\\"Data Points\\\">\\n      <div style=\\\"position:center; width: 100%; height: 100%; padding-left: 10px\\\">\\n        <igx-category-chart  style=\\\"position:center; height:200px; width:400px\\\"\\n                            [dataSource]=\\\"data\\\"\\n                            thickness=\\\"1\\\"\\n                            brushes=\\\"#4286f4, #e8b220, #11c111\\\"\\n                            markerBrushes=\\\"#4286f4, #e8b220, #11c111\\\"\\n                            chartTitle=\\\"{{metric.name}}\\\"\\n                            [chartType]=\\\"SplineAread\\\"\\n                            markerTypes=\\\"Circle\\\"\\n                            [tooltipTemplate]=\\\"valueTooltip\\\">\\n        </igx-category-chart>\\n      </div>\\n      <ng-template let-series=\\\"series\\\" let-item=\\\"item\\\" #valueTooltip>\\n        <div>\\n          <span [style.color]=\\\"series.actualBrush\\\">{{metric.name}}:  {{item.y}}<br /></span>\\n          <span *ngIf=\\\"scraped\\\" [style.color]=\\\"series.actualBrush\\\">{{scraped.Name}}: {{item.y}}<br /></span>\\n        </div>\\n      </ng-template>\\n    </mat-tab>\\n  </mat-tab-group>\\n  <mat-dialog-actions style=\\\"overflow:visible\\\">\\n    <div>\\n      <button mat-flat-button color=\\\"primary\\\" (click)=\\\"save()\\\" >Save</button>\\n    </div>\\n    <div style=\\\"padding-left:15px;\\\">\\n      <button mat-flat-button color=\\\"warn\\\" (click)=\\\"cancel()\\\" >Cancel</button>\\n    </div>\\n  </mat-dialog-actions>\\n</div>\\n\"","import { Component, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { Metric, Meta, ChartData, ScrapedMetric } from '../../Models/Metric';\nimport { forEach } from '@angular/router/src/utils/collection';\n\n\n@Component({\n    selector: 'edit-metric-dialog',\n    templateUrl: 'edit-metric-dialog.component.html',\n})\nexport class EditMetricDialogComponent {\n  metricForm: FormGroup;\n  metric: Metric;\n  axisLabels: string[];\n  hasDef: boolean = false;\n  hasFootnotes: boolean = false;\n  data: any[];\n  scraped: ScrapedMetric;\n  constructor(\n    private fb: FormBuilder, public dialogRef: MatDialogRef<EditMetricDialogComponent>, @Inject(MAT_DIALOG_DATA) public _data: ChartData) {\n    \n    this.metricForm = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n    });\n    this.metric = _data.metric;\n    this.scraped = _data.scraped;\n    \n    this.axisLabels = [\"People\", \"Dollars\", \"Percent\", \"Items\", \"Months\", \"Years\", \"Hours\",\n      \"PerCapita\", \"DefendantsPerCriminalCase\", \"States\", \"WorkersPerState\", \"Per100000People\", \"Days\", \"Weeks\"];\n    if (this.metric.meta) {\n      for (var m of this.metric.meta) {\n        if (m.type === \"Definition\") {\n          this.hasDef = true;\n        }\n        if (m.type === \"Footnote\") {\n          this.hasFootnotes = true;\n        }\n      }\n    }\n    this.data = [this.metric.data]\n    if (this.scraped) {\n      if (this.scraped.Data && this.scraped.Data.length != 0) {\n        this.scraped.Name = this.scraped.Name + \"-- scraped\"\n        this.data.push(this.scraped);\n      }\n    }\n    \n    \n  }\n  cancel() {\n    this.dialogRef.close(null);\n  }\n\n  save() {\n    this.dialogRef.close(this.metric);\n  }\n\n  removeMeta(m: Meta) {\n    this.metric.meta.forEach((item, index) => {\n      if (item === m) this.metric.meta.splice(index, 1);\n    });\n    if (m.type === 'Definition') {\n      this.hasDef = false;\n    }\n    if (m.type === 'Footnote') {\n      this.hasFootnotes = false;\n    }\n  }\n  addDef() {\n    var meta = { type: 'Definition', data: '' };\n    if (this.metric.meta)\n      this.metric.meta.push(meta);\n    else {\n      this.metric.meta = new Array();\n      this.metric.meta.push(meta);\n    }\n    this.hasDef = true;\n  }\n  addFoot() {\n    var meta = { type: 'Footnote', data: '' };\n    if (this.metric.meta)\n      this.metric.meta.push(meta);\n    else {\n      this.metric.meta = new Array();\n      this.metric.meta.push(meta);\n    }\n\n    this.hasFootnotes = true;\n  }\n\n}\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\n  <caption style=\\\"padding-left:35px\\\"><b>Metrics</b></caption>\\n  <table mat-table [dataSource]=\\\"svc.stagingMetrics\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let metric\\\">\\n        <button *ngIf=\\\"svc.stagingMetrics[0].id != -2\\\" matTooltip=\\\"{{metric.id}}\\\" type=\\\"button\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>people</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\n      <td mat-cell *matCellDef=\\\"let metric\\\"> {{metric.name}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"last_modified\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef> Last Modified </th>\\n      <td mat-cell *matCellDef=\\\"let metric\\\"> {{metric.modified_on | date: 'MM/dd/yyyy'}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"last_published\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef> Last Published </th>\\n      <td mat-cell *matCellDef=\\\"let metric\\\"> {{ metric.LastPushedIntoProduction  | date: 'MM/dd/yyyy'}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"edit\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let metric\\\">\\n        <button *ngIf=\\\"svc.stagingMetrics[0].id != -2\\\" (click)=\\\"openEdit(metric)\\\" matTooltip=\\\"Edit {{metric.name}}\\\" type=\\\"button\\\" mat-icon-button style=\\\"color:#ffae42 \\\">\\n          <mat-icon>edit</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"publish\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let metric\\\">\\n        <button mat-raised-button *ngIf=\\\"svc.stagingMetrics[0].id != -2\\\" color=\\\"primary\\\" style=\\\" font-size:10pt; height:35px; margin-left:10px;\\\" [matMenuTriggerFor]=\\\"menu\\\"><mat-icon style=\\\" font-size:10pt; margin-top:10px\\\">keyboard_arrow_down</mat-icon> Publish</button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n          <button mat-menu-item>\\n            Individual Metric<mat-icon>publish</mat-icon>\\n          </button>\\n          <button mat-menu-item>\\n            Metric with Children<mat-icon>publish</mat-icon>\\n          </button>\\n        </mat-menu>\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { Metric } from '../../Models/Metric';\n\n@Component({\n  selector: 'metric-table',\n  templateUrl: './metricTable.component.html',\n})\nexport class MetricTableComponent {\n  displayedColumns: string[] = ['child', 'name', 'last_modified','last_published', 'edit', 'publish'];\n  constructor(private svc: ServiceMaster) {\n\n  }\n  openEdit(metric: Metric) {\n    this.svc.getMetricEdit(metric);\n  }\n\n}\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\n  <caption  style=\\\"padding-left:35px\\\"><b>Missions</b></caption>\\n  <table mat-table [dataSource]=\\\"svc.stagingMissions\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\n      <td mat-cell *matCellDef=\\\"let misison\\\"> {{misison.name}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let mission\\\">\\n        <button *ngIf=\\\"svc.stagingMissions.length > 1\\\" matTooltip=\\\"{{mission.id}}\\\" type=\\\"button\\\" (click)=\\\"selectMission(mission)\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>people</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { Mission } from '../../Models/Mission';\n\n\n@Component({\n  selector: 'mission-table',\n  templateUrl: './missionTable.component.html',\n})\nexport class MissionTableComponent {\n  displayedColumns: string[] = ['child','name'];\n  constructor(private svc: ServiceMaster) {\n    \n  }\n\n  selectMission(mission: Mission) {\n    this.svc.stagingMissions = [mission];\n    this.svc.getReportingUnits()\n\n  }\n}\n","module.exports = \"<h2>Hi, {{svc.loginService.profile.FirstName}}</h2>\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n  <mat-label>First Name</mat-label>\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.FirstName\\\"  value=\\\"{{svc.loginService.profile.FirstName}}\\\">\\n</mat-form-field>\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\">\\n  <mat-label>Last Name</mat-label>\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.LastName\\\" value=\\\"{{svc.loginService.profile.LastName}}\\\">\\n</mat-form-field>\\n<br />\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\" style=\\\"width:20%\\\">\\n  <mat-label>Email</mat-label>\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.Email\\\" value=\\\"{{svc.loginService.profile.Email}}\\\">\\n</mat-form-field>\\n<br />\\n<mat-form-field [floatLabel]=\\\"options.value.floatLabel\\\" >\\n  <mat-label>Password</mat-label>\\n  <input matInput [(ngModel)]=\\\"svc.loginService.profile.Password\\\" value=\\\"{{svc.loginService.profile.Password}}\\\">\\n</mat-form-field>\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent {\n  options: FormGroup;\n\n\n  constructor(protected svc: ServiceMaster, fb: FormBuilder) {\n    this.options = fb.group({\n      floatLabel: 'auto',\n    });\n\n  }\n}\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\n  <caption style=\\\"padding-left:35px\\\"><b>Reporting Units</b></caption>\\n  <table mat-table [dataSource]=\\\"svc.stagingReportingUnits\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\n      <td mat-cell *matCellDef=\\\"let reportingUnit\\\"> {{reportingUnit.name}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let reportingUnit\\\">\\n        <button *ngIf=\\\"svc.stagingReportingUnits.length > 1\\\" matTooltip=\\\"{{reportingUnit.id}}\\\" type=\\\"button\\\" (click)=\\\"selectReportingUnit(reportingUnit)\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>people</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { ReportingUnit } from '../../Models/ReportingUnit';\n\n\n@Component({\n  selector: 'reporting-unit-table',\n  templateUrl: './reportingUnitTable.component.html',\n})\nexport class ReportingUnitTableComponent {\n  displayedColumns: string[] = ['child', 'name'];\n  constructor(private svc: ServiceMaster) {\n\n  }\n\n  selectReportingUnit(reportingUnit: ReportingUnit) {\n    this.svc.stagingReportingUnits = [reportingUnit];\n    this.svc.getTopics();\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"header-row\\\" style=\\\"padding-left:20px\\\">\\n  <h2>Staging</h2>\\n</div>\\n\\n<div>\\n  <mat-form-field [floatLabel]=\\\"search.value.floatLabel\\\" style=\\\"padding-left:35px\\\">\\n    <mat-label>Search Metric</mat-label>\\n    <input matInput name=\\\"search\\\" [(ngModel)]=\\\"SearchID\\\" value=\\\"{{SearchID}}\\\">\\n  </mat-form-field>\\n  <button mat-raised-button color=\\\"primary\\\" style=\\\" font-size:10pt; height:35px; margin-left:10px;\\\" (click)=\\\"getSearch()\\\"><mat-icon style=\\\" font-size:10pt; margin-top:10px\\\">search</mat-icon> Search</button>\\n  <button mat-raised-button *ngIf=\\\"svc.stagingReportingUnits[0].id != -1 || svc.stagingTopics[0].id != -1 || svc.stagingMetrics[0].id != -1\\\" color=\\\"warn\\\" style=\\\" font-size:10pt; height:35px; width:25px; margin-left:15px;\\\" (click)=\\\"clear()\\\"><mat-icon style=\\\" font-size:10pt; margin-top:10px\\\">backspace</mat-icon> Clear</button>\\n</div>\\n<ul>\\n  <li *ngIf=\\\"svc.missionBreadCrumb.id != -1\\\" style=\\\"display:inline\\\">\\n    /<a (click)=\\\"goToMission()\\\" style=\\\"cursor:pointer\\\">{{svc.missionBreadCrumb.name}}</a>\\n  </li>\\n  <li *ngIf=\\\"svc.reportingUnitBreadCrumb.id != -1\\\" style=\\\"display:inline\\\">\\n    /<a (click)=\\\"goToReportingUnit()\\\" style=\\\"cursor:pointer\\\">{{svc.reportingUnitBreadCrumb.name}}</a>\\n  </li>\\n\\n</ul>\\n<mission-table *ngIf=\\\"svc.stagingMissions[0].id != -1\\\"></mission-table>\\n<reporting-unit-table *ngIf=\\\"svc.stagingReportingUnits[0].id != -1\\\"></reporting-unit-table>\\n<topic-table *ngIf=\\\"svc.stagingTopics[0].id != -1\\\"></topic-table>\\n<metric-table *ngIf=\\\"svc.stagingMetrics[0].id != -1\\\"></metric-table>\\n\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ServiceMaster } from '../../services/serviceMaster'\n\n\n@Component({\n  selector: 'staging',\n  templateUrl: './staging.component.html'\n})\nexport class StagingComponent {\n  search: FormGroup;\n  SearchID: string\n  constructor(fb: FormBuilder, private svc: ServiceMaster ) {\n    this.search = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n    });\n    this.SearchID = \"\";\n  }\n\n  clear() {\n    this.svc.getMissions();\n    this.SearchID = \"\";\n  }\ngoToMission()\n{\n  this.svc.stagingMissions = [this.svc.missionBreadCrumb];\n  this.svc.stagingMissions[0].applicationType = 1;\n  this.svc.getReportingUnits();\n  this.SearchID = \"\";\n  }\n\n  goToReportingUnit()\n  {\n    this.svc.stagingReportingUnits = [this.svc.reportingUnitBreadCrumb];\n    this.svc.getTopics();\n    this.SearchID = \"\";\n  }\n\n  getSearch() {\n    this.svc.searchStaging(this.SearchID);\n  }\n}\n","module.exports = \"<div style=\\\"padding-left:35px\\\">\\n  <caption style=\\\"padding-left:35px\\\"><b>Topics</b></caption>\\n  <table mat-table [dataSource]=\\\"svc.stagingTopics\\\" class=\\\"mat-elevation-z8\\\" style=\\\"width:60%\\\">\\n\\n    <ng-container matColumnDef=\\\"name\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef> name </th>\\n      <td mat-cell *matCellDef=\\\"let topic\\\"> {{topic.name}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"child\\\" style=\\\"padding-left:35px\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let topic\\\">\\n        <button *ngIf=\\\"svc.stagingTopics.length > 1\\\"  matTooltip=\\\"{{topic.id}}\\\" (click)=\\\"selectTopic(topic)\\\" type=\\\"button\\\"  mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>people</mat-icon>\\n        </button>\\n      </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../../services/serviceMaster';\nimport { Topic } from '../../Models/Topic';\n\n\n@Component({\n  selector: 'topic-table',\n  templateUrl: './topicTable.component.html',\n})\nexport class TopicTableComponent {\n  displayedColumns: string[] = ['child', 'name'];\n  constructor(private svc: ServiceMaster) {\n\n  }\n  selectTopic(topic: Topic) {\n    this.svc.stagingTopics = [topic];\n    this.svc.trendToMetrics();\n  }\n\n}\n","module.exports = \"\\n<div class=\\\"container-fluid\\\" style=\\\"height:100%\\\">\\n  <mat-toolbar style=\\\"width:100%\\\" color=\\\"warn\\\">\\n    <mat-toolbar-row>\\n      <h1 class=\\\"app-name\\\">{{title}}</h1>\\n      <span style=\\\"flex: 1 1 auto;\\\"></span>\\n      <button type=\\\"button\\\" *ngIf=\\\"svc.loginService.isLoggedIn\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" color=\\\"primary\\\">\\n        <mat-icon>person</mat-icon>\\n      </button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>\\n            Log Out\\n        </button>\\n        <button mat-menu-item (click)=\\\"profile()\\\">\\n          Your Profile\\n        </button>\\n      </mat-menu>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <mat-sidenav-container class=\\\"example-container\\\" >\\n    <mat-sidenav *ngIf=\\\"svc.loginService.isLoggedIn\\\" mode=\\\"side\\\" opened role=\\\"navigation\\\" color=\\\"primary\\\" style=\\\"height:100%\\\">\\n      <mat-nav-list >\\n        <a mat-list-item routerLink='/staging'>Staging</a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content >\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { ServiceMaster } from '../services/serviceMaster';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title: string\n  isUserLoggedIn: boolean;\n  constructor(private svc: ServiceMaster, private router: Router) {\n    this.title = 'USA Facts Data Tool';\n    \n  }\n\n  profile() {\n    this.router.navigate(['/profile']);\n  }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { ActivatedRoute, Router, NavigationExtras  } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Profile } from '../Models/Profile';\n\n@Injectable()\nexport class LoginService {\n  isLoggedIn: boolean;\n  public profile: Profile;\n\n  constructor(protected http: HttpClient) {\n    this.isLoggedIn = false;\n  }\n  login(Username: string, Password: string): Promise<boolean>{\n    let header = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    return this.http.post<Profile>('http://usafacts-api-staging.azurewebsites.net/api/v2/authentication', JSON.stringify({ Username, Password }), { headers: header }).toPromise()\n      .then(response => {\n        this.isLoggedIn = true;\n        this.profile = response;\n        return Promise.resolve(this.isLoggedIn);\n\n\n      })\n      .catch(error => {\n        this.isLoggedIn = false;\n        return Promise.resolve(this.isLoggedIn);\n      });\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, NavigationExtras, CanLoad, Route } from '@angular/router';\nimport { ServiceMaster } from './serviceMaster';\n\n\n@Injectable()\nexport class LoginGuard implements CanActivate, CanActivateChild, CanLoad {\n    constructor(private svc: ServiceMaster, private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n      if (this.svc.loginService.isLoggedIn) {\n        return true;\n      }\n      else {\n        this.router.navigate(['/login']);\n        return false;\n      }\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    canLoad(route: Route): boolean {\n\n        let url = `/${route.path}`;\n        return this.checkLogin(url);\n    }\n\n    checkLogin(url: string): boolean {\n\n        if (this.svc.loginService.isLoggedIn) {\n            return true;\n        }\n\n        //this.loginService.loginRedirectUrl = url;\n        this.router.navigate(['/login']);\n\n        return false;\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Metric, ScrapedMetric } from '../Models/Metric';\n\n@Injectable()\nexport class MetricService {\n\n\n  constructor(protected http: HttpClient, private key: string, private url : string) {\n  }\n  getStagingEdit(id: string): Promise<Metric> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n\n    return this.http.get<Metric>(this.url + '/metrics/' + id + '/verbose', { headers: header }).toPromise();\n  }\n\n  getStagingMetricSearch(id: string): Promise<Metric[]> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n\n    return this.http.get<Metric[]>(this.url + '/metrics/verbose?ids=' + id, { headers: header }).toPromise();\n  }\n  getScraped(m: Metric): Promise<ScrapedMetric> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n    return this.http.get<ScrapedMetric>('http://pwbmscrapeddata1.azurewebsites.net/api/values/Usafactsmetric' + m.id, { headers: header }).toPromise();\n  }\n  \n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Mission } from '../Models/Mission';\n\n@Injectable()\nexport class MissionService {\n\n\n  constructor(protected http: HttpClient, private key: string, private url : string) {\n  }\n  getStagingMissions(): Promise<Mission[]> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n\n    return this.http.get<Mission[]>(this.url + '/missions', { headers: header }).toPromise();\n  }\n  public getStagingPopulationMissions(): Promise<Mission[]> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n    return this.http.get<Mission[]>(this.url + '/population', { headers: header }).toPromise();\n  }\n\n  public getStagingMissionBreadcrumb(id: string): Promise<Mission> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n\n    return this.http.get<Mission>(this.url + '/missions/' + id, { headers: header }).toPromise();\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ReportingUnit } from '../Models/ReportingUnit';\n\n@Injectable()\nexport class ReportingUnitService {\n\n\n  constructor(protected http: HttpClient, private key: string, private url : string) {\n  }\n\n\n  public getStagingReportingUnitBreadcrumb(id: string): Promise<ReportingUnit> {\n    let header = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.key });\n\n    return this.http.get<ReportingUnit>(this.url + '/ReportingUnits/' + id, { headers: header }).toPromise();\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { ActivatedRoute, Router, NavigationExtras } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Profile } from '../Models/Profile';\nimport { LoginService } from './LoginService';\nimport { MissionService } from './missionService';\nimport { Mission } from '../Models/Mission';\nimport { ReportingUnit } from '../Models/ReportingUnit';\nimport { Topic } from '../Models/Topic';\nimport { Metric, ScrapedMetric, ChartData } from '../Models/Metric';\nimport { MetricService } from './metricService';\nimport { ReportingUnitService } from './reportingUnitService';\nimport { EditMetricDialogComponent } from '../components/MetricTable/edit-metric-dialog.component';\n\n\n@Injectable()\nexport class ServiceMaster {\n  loginService: LoginService;\n  missionService: MissionService;\n  authCode: string;\n  stagingUrl = 'http://usafacts-api-staging.azurewebsites.net/api/v2';\n  stagingMissions: Mission[];\n  stagingReportingUnits: ReportingUnit[];\n  stagingTopics: Topic[];\n  missionBreadCrumb: Mission;\n  reportingUnitBreadCrumb: ReportingUnit;\n  stagingMetrics: Metric[];\n  metricService: MetricService;\n  metricEdit: Metric;\n  reportingUnitService: ReportingUnitService;\n  scrapedMetric: ScrapedMetric;\n  data: ChartData;\n  constructor(protected http: HttpClient, public dialog: MatDialog) {\n    this.loginService = new LoginService(http);\n    var r = new ReportingUnit();\n    r.id = -1;\n    this.stagingReportingUnits = [r];\n    this.reportingUnitBreadCrumb = r;\n    var t = new Topic();\n    t.id = -1;\n    this.stagingTopics = [t];\n    var miss = new Mission();\n    miss.id = -1;\n    this.stagingMissions = [miss];\n    this.missionBreadCrumb = miss;\n    var met = new Metric;\n    met.id = -1;\n    this.stagingMetrics = [met];\n  }\n\n  getAuthCode() {\n    this.authCode = 'Basic ' + this.loginService.profile.SessionId;\n    this.missionService = new MissionService(this.http, this.authCode, this.stagingUrl);\n    this.metricService = new MetricService(this.http, this.authCode, this.stagingUrl);\n    this.reportingUnitService = new ReportingUnitService(this.http, this.authCode, this.stagingUrl);\n    this.getMissions();\n    \n\n  }\n\n  getMissions() {\n    var r = new ReportingUnit();\n    r.id = -1;\n    this.stagingReportingUnits = [r];\n    var t = new Topic();\n    t.id = -1;\n    this.stagingTopics = [t];\n    var met = new Metric;\n    met.id = -1;\n    this.stagingMetrics = [met];\n    this.missionBreadCrumb.id = -1\n    this.reportingUnitBreadCrumb.id = -1;\n    this.missionService.getStagingMissions().then(response => {\n      response.forEach(r => {\n        r.applicationType = 1;\n      });\n      this.stagingMissions = response;\n      this.missionService.getStagingPopulationMissions().then(response => {\n        response.forEach(r => {\n          r.applicationType = 4;\n        });\n        this.stagingMissions = this.stagingMissions.concat(response);\n      });\n    });\n  }\n\n  getReportingUnits() {\n    var t = new Topic();\n    t.id = -1;\n    this.stagingTopics = [t];\n    var m = new Mission()\n    m.id = -1;\n    var met = new Metric;\n    met.id = -1;\n    this.stagingMetrics = [met];\n    this.missionBreadCrumb = m;\n    var r = new ReportingUnit();\n    r.id = -1;\n    this.reportingUnitBreadCrumb = r;\n    if (this.stagingMissions.length == 1) {\n      if (this.stagingMissions[0].applicationType == 1) {\n        \n        this.stagingReportingUnits = this.stagingMissions[0].reporting_units;\n      }\n      if (this.stagingMissions[0].applicationType == 4) {\n        var m = this.stagingMissions[0];\n        this.searchStaging(this.stagingMissions[0].metrics.toString());\n        this.stagingMissions[0] = m;\n        \n      }\n    }\n    else {\n      console.log(\"Error getting reporting units\");\n    }\n    \n  }\n\n  getTopics() {\n    var miss = new Mission();\n    miss.id = -1;\n    var met = new Metric;\n    met.id = -1;\n    this.stagingMetrics = [met];\n    if (this.missionBreadCrumb.id == -1) {\n      this.missionBreadCrumb = this.stagingMissions[0];\n    }\n    var r = new ReportingUnit();\n    r.id = -1;\n    this.reportingUnitBreadCrumb = r;\n    this.stagingMissions = [miss];\n    this.stagingTopics = this.stagingReportingUnits[0].topics;\n  }\n\n  trendToMetrics() {\n    var r = new ReportingUnit();\n    r.id = -1;\n    this.reportingUnitBreadCrumb = this.stagingReportingUnits[0];\n    this.stagingReportingUnits = [r];\n    this.stagingMetrics = this.stagingTopics[0].metrics;\n  }\n\n  getMetricEdit(metric: Metric) {\n    this.metricService.getStagingEdit(metric.id.toString()).then(response => {\n      this.metricEdit = response;\n      this.metricService.getScraped(response).then(r => {\n        this.scrapedMetric = r\n      })\n      this.data = { metric : this.metricEdit, scraped : this.scrapedMetric}\n      let dialogRef = this.dialog.open(EditMetricDialogComponent,\n        {\n          panelClass: 'mat-dialog-lg',\n          data: this.data,\n          width: '75%',\n          height: '75%',\n          \n        });\n    });\n    \n  \n  }\n\n  searchStaging(id: string) {\n    var t = new Topic();\n    t.id = -1;\n    this.stagingTopics = [t];\n    var m = new Mission()\n    m.id = -1;\n    this.stagingMissions = [m];\n    var r = new ReportingUnit();\n    r.id = -1;\n    this.stagingReportingUnits = [r];\n    this.missionBreadCrumb = m;\n    this.reportingUnitBreadCrumb = r;\n    this.metricService.getStagingMetricSearch(id).then(response => {\n      if (response.length == 0) {\n        var m = new Metric();\n        m.id = -2;\n        m.name = \"No Metrics Found\"\n        this.stagingMetrics = [m]\n      }\n      else {\n        this.stagingMetrics = response\n        if (response.length == 1) {\n        this.missionService.getStagingMissionBreadcrumb(this.stagingMetrics[0].ancestry.mission.toString()).then(m => {\n          this.missionBreadCrumb = m\n          this.reportingUnitBreadCrumb = this.missionBreadCrumb.reporting_units.find(r => r.id == this.stagingMetrics[0].ancestry.reporting_unit);\n        })\n\n      \n      }\n      }\n      \n \n    });\n   \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}